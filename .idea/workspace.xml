<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fb70fe26-3cfe-417b-9270-bf392b5cb8e1" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.env.dev" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/data-source.ts" beforeDir="false" afterPath="$PROJECT_DIR$/db/data-source.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/migrations/1701706583615-NewMigration.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/app.module.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/app.module.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/app.module.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/app.module.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/main.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/main.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/main.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/main.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/main.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/main.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/tsconfig.build.tsbuildinfo" beforeDir="false" afterPath="$PROJECT_DIR$/dist/tsconfig.build.tsbuildinfo" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ormconfig.ts" beforeDir="false" afterPath="$PROJECT_DIR$/ormconfig.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/auth.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/auth/auth.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/auth.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/auth/auth.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/auth.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/auth/auth.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/strategies/jwt-strategy.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/auth/strategies/jwt-strategy.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/strategies/refreshToken.strategy.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/auth/strategies/refreshToken.strategy.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/comment/comment.module.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/comment/comment.service.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/comment/comment.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/comment.entity.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/topic.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/entities/topic.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/entities/user.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/user/user.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/user/dto/createUserDto.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/user/dto/createUserDto.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/user/user.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/user/user.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/user/user.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/user/user.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/user/user.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/user/user.service.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Z7gj8VXzdyAArYNGX53ei72VdU" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "prettier.import.notification.dismissed": "true",
    "settings.editor.selected.configurable": "actions.on.save",
    "ts.external.directory.path": "C:\\Users\\Dominik\\Desktop\\projects\\Dandelion-api\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Dominik\Desktop\projects\Dandelion-api\src\user" />
      <recent name="C:\Users\Dominik\Desktop\projects\Dandelion-api\src\entities" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fb70fe26-3cfe-417b-9270-bf392b5cb8e1" name="Changes" comment="" />
      <created>1701778664822</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1701778664822</updated>
      <workItem from="1701778669022" duration="3518000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>